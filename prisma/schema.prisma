// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  namaLengkap     String
  email           String   @unique
  password        String?
  noTelp          String?
  kota            String?
  negara          String?
  gambarProfile   String?
  fileId          String?
  isAdmin         Boolean  @default(false)
  googleId        String?
  notifikasi      Notifikasi[]
  transaksi       Transaksi[]
  activationCode  ActivationCode[]
  resetCode       ResetCode[]
}

model ActivationCode {
  id              Int      @id @default(autoincrement())
  userId          Int
  activationCode  String
  createdAt       DateTime  @default(now())
  user            User      @relation(fields: [userId], references: [id])
}

model ResetCode {
  id        Int      @id @default(autoincrement())
  userId    Int
  resetCode String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Notifikasi {
  id          Int      @id @default(autoincrement())
  title       String
  body        String
  deskripsi   String?
  dateTime    DateTime @default(now()) 
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model Tipe{
  id        Int     @id @default(autoincrement())
  tipeKelas String
  kelas     Kelas[]
}

model Level{
  id        Int     @id @default(autoincrement())
  namaLevel String
  kelas     Kelas[]
}

model Kategori{
  id            Int     @id @default(autoincrement())
  namaKategori  String
  kelas         Kelas[]
}

model Kelas{
  kodeKelas   String     @unique
  namaKelas   String
  harga       Decimal
  materi      String
  vidio       String
  fileId      String
  tipeId      Int 
  levelId     Int 
  kategoriId  Int
  tipe        Tipe        @relation(fields: [tipeId], references: [id])
  level       Level       @relation(fields: [levelId], references: [id])
  kategori    Kategori    @relation(fields: [kategoriId], references: [id])
  transaksi   Transaksi[]
}

model Transaksi{
  id            Int       @id @default(autoincrement())
  status        Boolean   @default(false)
  metode        String
  tanggalBayar  DateTime
  userId        Int
  kodeKelas     String
  user          User      @relation(fields: [userId], references: [id])
  kelas         Kelas     @relation(fields: [kodeKelas], references: [kodeKelas])
}

